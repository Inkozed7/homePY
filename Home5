# 38. Напишите программу, удаляющую из 
# текста все слова содержащие "абв".

my_text = 'Напишите абв напиабв програбвмму программу, удаляющую из \
    этого абв текста все вабвс слова, содерабващие содержащие "абв"'

def del_some_words(my_text):
    my_text = list(filter(lambda x: 'абв' not in x, my_text.split()))
    return " ".join(my_text)

my_text = del_some_words(my_text)
print(my_text)


import random

greeting = ('Здравствуйте! Вас приветствует игра "Забери все конфеты!" '
    'Основные правила игры: '
    'Нам будет дано некоторое количество конфет, '
    'за один ход мы можем взять не более определённого количества, '
    'о котором мы с вами договоримся.'
    'Итак, начнём!')
            

messages = ['Ваша очередь брать конфеты', 'возьмите конфеты', 
            'сколько конфет возьмёте?', 'берите, не стесняйтесь', 'Ваш ход']


def play_game(n, m, players, messages):
    count = 0
    if n%10 == 1 and 9 > n > 10: letter = 'а'
    elif 1 < n%10 < 5 and 9 > n > 10: letter = 'ы'
    else: letter = ''
    while n > 0:
        print(f'{players[count%2]}, {random.choice(messages)}')
        move = int(input())
        if move > n or move > m:
            print(f'Это слишком много, можно взять не более {m} конфет{letter}, у нас всего {n} конфет{letter}')
            attempt = 3
            while attempt > 0:
                if n >= move <= m:
                    break
                print(f'Попробуйте ещё раз, у Вас {attempt} попытки')
                move = int(input())
                attempt -=1
            else: 
                return print(f'Очень жаль, у Вас не осталось попыток. Game over!')
        n = n - move
        if n > 0: print(f'Осталось {n} конфет{letter}')
        else: print('Все конфеты разобраны.')
        count +=1
    return players[not count%2]

print(greeting)

player1 = input('Давайте познакомися. Первый игрок, как к Вам можно обращаться?\n')
player2 = input('Второй игрок, и Вы представьтесь, пожалуйста\n')
players = [player1, player2]

n = int(input('Сколько конфет будем разыгрывать?\n '))
m = int(input('Сколько максимально будем брать конфет за один ход?\n '))

winer = play_game(n, m, players, messages)
if not winer:
    print('У нас нет победителя.')
else: print(f'Поздравляю! В этот раз победил {winer}! Ему достаются все конфеты!')




from tkinter import *
import tkinter.messagebox

#выход из приложения
def exit_(event):
    root.destroy()

#справка
def pomosh(event):
    tkinter.messagebox.showinfo("Справка по игре.",
                                "F1 - Инфа.\n"+
                                "F12 - Новая игра.\n"+
                                "Ecs - выход из игры.\n"+
                                "Автор Сечак.Е.Н\n"
                                "группа №1652\n")

#начать занаво
def begin(event):
    global butn
    global field
    global numButton
    for b in butn:
        b.config(bg="green",text = '')
    field = [0, 0, 0, 0, 0, 0, 0, 0, 0]
    numButton = []
    
       

#логика приложения
def logik():
    global field
    global numButton
    if len(numButton) == 9:
        tkinter.messagebox.showinfo("Конец игры", "  Ничья!!!  ")
    else:
        end = False
        if field[0] == field[1] == field[2] > 0:
            winner = field[0]
            end = True
        elif field[3] == field[4] == field[5] > 0:
            winner = field[3]
            end = True
        elif field[6] == field[7] == field[8] > 0:
            winner = field[6]
            end = True
        elif field[0] == field[3] == field[6] > 0:
            winner = field[0]
            end = True
        elif field[1] == field[4] == field[7] > 0:
            winner = field[1]
            end = True
        elif field[2] == field[5] == field[8] > 0:
            winner = field[2]
            end = True
        elif field[0] == field[4] == field[8] > 0:
            winner = field[0]
            end = True
        elif field[2] == field[4] == field[6] > 0:
            winner = field[2]
            end = True
        if end:
            if winner == 1:
                user = "Нолик"
            elif winner == 2:
                user = "Крестик"
            tkinter.messagebox.showinfo("Конец игры", "Выиграл " + user)
            begin(None)

#нажатие на кнопки
def click(button, num):
    global numButton
    if num not in numButton:
        global XO
        if XO == 1:
            button.config(text = 'Нолик')
            button.config(bg = 'gold')
            field[num] = XO
            XO = 2
        else:
            button.config(text = 'Крестик')
            button.config(bg = 'grey')
            field[num] = XO
            XO = 1
        numButton.append(num)
        logik()


field = [0, 0, 0, 0, 0, 0, 0, 0, 0] #список значений 1 или 2
XO = 1#крестик - 1, нолик - 2
numButton = [] #список нажатых кнопок


root = Tk()
root.title("Крестики-нолики")
root.geometry("233x238")
root.resizable(False, False)

ris0 = Button(root, width=10, height=5, bg="green",
              text="q", command=lambda:click(ris0, 0))
ris0.place(x=0, y=0)
ris1 = Button(root, width=10, height=5, bg="green",
              text="w", command=lambda:click(ris1, 1))
ris1.place(x=81, y=0)
ris2 = Button(root, width=10, height=5, bg="green",
              text="e", command=lambda:click(ris2, 2))
ris2.place(x=162, y=0)

ris3 = Button(root, width=10, height=5, bg="green",
              text="a", command=lambda:click(ris3, 3))
ris3.place(x=0, y=81)
ris4 = Button(root, width=10, height=5, bg="green",
              text="s", command=lambda:click(ris4, 4))
ris4.place(x=81, y=81)
ris5 = Button(root, width=10, height=5, bg="green",
              text="d", command=lambda:click(ris5, 5))
ris5.place(x=162, y=81)

ris6 = Button(root, width=10, height=5, bg="green",
              text="z", command=lambda:click(ris6, 6))
ris6.place(x=0, y=162)
ris7 = Button(root, width=10, height=5, bg="green",
              text="x", command=lambda:click(ris7, 7))
ris7.place(x=81, y=162)
ris8 = Button(root, width=10, height=5, bg="green",
              text="c", command=lambda:click(ris8, 8))
ris8.place(x=162, y=162)

butn = [ris0, ris1, ris2, ris3, ris4, ris5, ris6, ris7, ris8]

#функциональные клавиши
root.bind('<Escape>', exit_)
root.bind('<F1>', pomosh)
root.bind('<F12>', begin)

#игра нажатием буков
root.bind('<q>', lambda *ignore:click(ris0,0))
root.bind('<w>', lambda *ignore:click(ris1,1))
root.bind('<e>', lambda *ignore:click(ris2,2))
root.bind('<a>', lambda *ignore:click(ris3,3))
root.bind('<s>', lambda *ignore:click(ris4,4))
root.bind('<d>', lambda *ignore:click(ris5,5))
root.bind('<z>', lambda *ignore:click(ris6,6))
root.bind('<x>', lambda *ignore:click(ris7,7))
root.bind('<c>', lambda *ignore:click(ris8,8))

root.mainloop()



# Задача №41: Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных. Входные и выходные данные хранятся в отдельных текстовых файлах. Пример:
# На сжатие входные данные: WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWBWWWWWWWWWWWWWW
# Выходные данные:          12W1B12W3B24W1B14W



def coding(txt):
    count = 1
    res = ''
    for i in range(len(txt)-1):
        if txt[i] == txt[i+1]:
            count += 1
        else:
            res = res + str(count) + txt[i]
            count = 1
    if count > 1 or (txt[len(txt)-2] != txt[-1]):
        res = res + str(count) + txt[-1]
    return res

def decoding(txt):
    number = ''
    res = ''
    for i in range(len(txt)):
        if not txt[i].isalpha():
            number += txt[i]
        else:
            res = res + txt[i] * int(number)
            number = ''
    return res


s = input("Введите текст для кодировки: ")
print(f"Текст после кодировки: {coding(s)}")
print(f"Текст после дешифровки: {decoding(coding(s))}")
